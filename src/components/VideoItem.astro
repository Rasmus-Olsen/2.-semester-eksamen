---
const { videoUrl, rawHTMLString } = Astro.props;
---

<div class="item item-d">
    <video id="background-video" autoplay loop muted>
        <source src={videoUrl} type="video/mp4">
    </video>
    <div id="video-text-container">
        <p id="video-tekst" set:html={rawHTMLString}></p>
    </div>
</div>



<style define:vars={{videoUrl}}>

    * {
        margin: 0;
        box-sizing: border-box;
    }

    .item {
        /* border: 1px solid #333; */
        height: auto;
        width: 100vw;
        text-align: center;
        color: #fff;
        display: flex;
        flex-direction: column;
        align-items: center;
        overflow: hidden; /* Hide overflow of video */
        background: hsl(60, 60%, 30%);

        /* display grid, så tekst kan blive placeret oven på video */
        display:grid;
        justify-items: center;
        align-items: start;
        overflow: hidden; /* Hide overflow of text */
        position: relative;
        top: -86px;
        /* height: calc(100vh + 8px); */
        /* height: 90vh; */
        height: 700px;
    }


   /* video background */
       #background-video {
           grid-area: 1 /1;
           /* height: calc(100vh + 8px); */
           width: 110%;
           object-fit: cover;
           height: 705px;
       }

       #video-text-container {
        position: absolute;
        top: 50%; /* Center the text vertically */
        left: 50%; /* Center the text horizontally */
        transform: translate(-50%, -50%); /* Adjust to center */
        z-index: 1; /* Ensure the text stays above the video */
        color: #fff;
        text-align: center;
        /* max-width: 80%; */
        overflow-y: auto; /* Enable vertical scrolling */
        max-height: 62%; /* Limit height for scrolling */
        padding: 20px;
        width: 100%;

}

    #video-text-container::-webkit-scrollbar {
        width: 0; /* Hide scrollbar */
    }

       /* video overlay */
       #video-tekst{
           grid-area: 1 / 1;
           opacity: .8; 
           place-self:center;
           margin: 0 auto; /* Center the text horizontally */
       } 
       
        /* Fade ind op alle andre bokse end den første */
        .item:not(:first-of-type) {
            opacity: 0.4;
            transition: opacity 2s;
        }

       .item.fade-in{
            opacity: 1!important;
        }

        p {
            font-size: 24px;
            width: 90vw;
            max-width: 800px;
            margin: 4rem 0;
    }

 
</style>

<script>
    const boxes = document.querySelectorAll('.item') ;
    window.addEventListener('scroll', fadeBoxes);
    
    function fadeBoxes(){
        const triggerBottom = (window.innerHeight - 100);
            
        boxes.forEach(box => {
                const boxHeight = box.getBoundingClientRect().height;
                const boxTop = box.getBoundingClientRect().top;
                const boxBottom = box.getBoundingClientRect().bottom;

                if (boxTop < triggerBottom && boxTop > -boxHeight + 150){
                        
                        box.classList.add('fade-in');
                }
                if (boxBottom < 100 || boxTop > triggerBottom) {
                       box.classList.remove('fade-in');
                       box.style.opacity = 0.4;
                
        }
    });
};


</script>